<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://code.alibabatech.com/schema/dubbo http://code.alibabatech.com/schema/dubbo/dubbo.xsd">

    <!-- 当前项目在整个分布式架构里面唯一的名称，计算依赖关系的标签 -->
    <dubbo:application name="provider" owner="ms"/>

    <dubbo:monitor protocol="registry"/>

    <!-- dubbo 这个服务所要暴露的服务器地址所对应的注册中心 -->
<!--    <dubbo:registry address="N/A"/>-->

    <!-- 使用zookeeper作为服务注册中心 -->
    <dubbo:registry address="zookeeper://localhost:2181"/>

    <!-- 当前服务发布所依赖的协议：webservice 、Thrift 、Hessain 、http -->
    <dubbo:protocol name="dubbo" port="20880"/>

    <!-- 服务发布的配置，需要暴露的服务接口 -->
    <dubbo:service interface="com.fzp.provider.service.ProviderService" ref="providerService"/>

    <!-- bean 定义 -->
    <bean id="providerService" class="com.fzp.provider.service.impl.ProviderServiceImpl"/>

    <!--
        ① 上面的文件其实就是类似 spring 的配置文件，而且，dubbo 底层就是 spring。
        ② 节点：dubbo:application 就是整个项目在分布式架构中的唯一名称，可以在 name 属性中配置，另外还可以配置 owner 字段，表示属于谁。
        ③ 节点：dubbo:monitor 监控中心配置， 用于配置连接监控中心相关信息，可以不配置，不是必须的参数。
        ④ 节点：dubbo:registry 配置注册中心的信息，比如，这里我们可以配置 zookeeper 作为我们的注册中心。
                address 是注册中心的地址，这里我们配置的是 N/A 表示由 dubbo 自动分配地址。或者说是一种直连的方式，不通过注册中心。
        ⑤ 节点：dubbo:protocol 服务发布的时候 dubbo 依赖什么协议，可以配置 dubbo、webserovice、Thrift、Hessain、http等协议。
        ⑥ 节点：dubbo:service 这个节点就是我们的重点了，当我们服务发布的时候，我们就是通过这个配置将我们的服务发布出去的。
                interface 是接口的包路径，ref 是第 ⑦ 点配置的接口的 bean。
        ⑦ 最后，我们需要像配置 spring 的接口一样，配置接口的 bean。
    -->
</beans>