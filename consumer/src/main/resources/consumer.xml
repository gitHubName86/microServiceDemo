<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://code.alibabatech.com/schema/dubbo http://code.alibabatech.com/schema/dubbo/dubbo.xsd">

    <!-- 当前项目在整个分布式架构里面唯一名称，计算依赖关系的标签 -->
<!--    <dubbo:application name="consumer" owner="ms"/>-->

    <!-- zookeeper作为注册中心后，consumer，可能会报一个端口占用的WARN，但是不影响大局 -->
    <!-- 这里采用在xml文件配置的方式在consumer.xml中修改dubbo配置 -->
    <dubbo:application name="consumer" owner="ms">
        <dubbo:parameter key="qos.enable" value="true"/>
        <dubbo:parameter key="qos.accept.foreign.ip" value="false"/>
        <dubbo:parameter key="qos.port" value="33333"/>
    </dubbo:application>

    <!-- dubbo 这个服务所需要暴露的服务地址对应的注册中心 -->
    <!-- 点对点的方式 -->
<!--    <dubbo:registry address="N/A"/>-->

    <!-- 使用zookeeper 作为注册中心 -->
    <dubbo:registry address="zookeeper://localhost:2181" check="false"/>

    <!-- 生成一个远程服务的调用代理 -->
    <!-- 点对点的方式 -->
<!--    <dubbo:reference id="providerService" interface="com.fzp.provider.service.ProviderService"-->
<!--                     url="dubbo://192.168.8.100:20880/com.fzp.provider.service.ProviderService"/>-->

    <!-- 设置服务注册中心为zookeeper，这里不需要dubbo服务端提供的url了，直接引用就行了 -->
    <dubbo:reference id="providerService" interface="com.fzp.provider.service.ProviderService"/>

</beans>